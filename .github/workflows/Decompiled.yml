name: Convert RPYC to RPYðŸ˜…ðŸ˜‚ðŸ¤£ðŸ˜­

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  convert-rpyc:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Create to_rpy folder if not exists
      run: |
        mkdir -p to_rpy
        mkdir -p converted_rpy
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Try different installation methods for unrpyc
        pip install git+https://github.com/CensoredUsername/unrpyc.git || \
        pip install git+https://github.com/CensoredUsername/unrpyc.git@master || \
        (git clone https://github.com/CensoredUsername/unrpyc.git && cd unrpyc && pip install .)
        
    - name: Check for RPYC files
      run: |
        echo "Checking for .rpyc files in to_rpy folder..."
        find to_rpy -name "*.rpyc" -type f | head -10
        RPYC_COUNT=$(find to_rpy -name "*.rpyc" -type f | wc -l)
        echo "Found $RPYC_COUNT .rpyc files"
        
    - name: Convert RPYC to RPY
      run: |
        if [ -d "to_rpy" ] && [ "$(find to_rpy -name '*.rpyc' -type f | wc -l)" -gt 0 ]; then
          echo "Converting .rpyc files to .rpy..."
          
          # Method 1: Try using unrpyc directly
          for file in $(find to_rpy -name "*.rpyc" -type f); do
            echo "Converting: $file"
            OUTPUT_FILE="converted_rpy/$(basename "$file" .rpyc).rpy"
            
            # Try different unrpyc commands
            unrpyc "$file" -o "$OUTPUT_FILE" || \
            python -m unrpyc "$file" -o "$OUTPUT_FILE" || \
            python -c "
import sys
sys.path.append('unrpyc')
try:
    from unrpyc import decompile_rpyc
    decompile_rpyc('$file', '$OUTPUT_FILE')
except Exception as e:
    print('Error converting $file: ' + str(e))
            " || echo "Failed to convert $file"
          done
          
          echo "Conversion completed!"
          echo "Converted files:"
          ls -la converted_rpy/
        else
          echo "No .rpyc files found in to_rpy folder"
        fi
        
    - name: Upload converted files
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: converted-rpy-files
        path: converted_rpy/
        
    - name: Commit converted files (optional)
      run: |
        if [ "$(ls -A converted_rpy/)" ]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add converted_rpy/
          git commit -m "Add converted .rpy files from .rpyc" || echo "No changes to commit"
          git push || echo "Nothing to push"
        fi
      continue-on-error: true
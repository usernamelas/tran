name: Convert RPYC to RPYüòÑüòÉüòÄ (Ultra Simple)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  convert-rpyc:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Create directories
      run: |
        mkdir -p to_rpy
        mkdir -p converted_rpy
        chmod 777 converted_rpy
        
    - name: Convert RPYC to RPY using Docker
      run: |
        if [ -d "to_rpy" ] && [ "$(find to_rpy -name '*.rpyc' -type f | wc -l)" -gt 0 ]; then
          echo "Converting .rpyc files using Docker..."
          
          docker run --rm -v $(pwd)/to_rpy:/input -v $(pwd)/converted_rpy:/output \
            python:3.9 bash -c '
            pip install git+https://github.com/CensoredUsername/unrpyc.git
            cd /input
            for file in *.rpyc; do
              if [ -f "$file" ]; then
                echo "Converting: $file"
                filename=${file%.rpyc}
                
                # Try different unrpyc methods
                unrpyc "$file" -o "/output/${filename}.rpy" ||
                unrpyc "$file" --output-dir /output ||
                python -m unrpyc "$file" -o "/output/${filename}.rpy" ||
                echo "Failed to convert $file"
              fi
            done
            
            # Show results
            echo "=== Conversion Results ==="
            ls -la /output/
            for f in /output/*.rpy; do
              if [ -f "$f" ]; then
                size=$(stat -c%s "$f")
                echo "File: $(basename "$f") - Size: ${size} bytes"
                if [ "$size" -gt 200 ]; then
                  echo "Sample content:"
                  head -5 "$f" | grep -v "Unrpyc\|results summary\|---\|Performing" | head -3
                fi
              fi
            done
            
            # Clean up log messages from output files
            for f in /output/*.rpy; do
              if [ -f "$f" ] && grep -q "Unrpyc\|results summary" "$f"; then
                echo "Cleaning $f..."
                grep -v "Unrpyc\|results summary\|Performing decompilation\|---\|Found.*file\|Decompiling.*to" "$f" > "$f.tmp"
                if [ -s "$f.tmp" ]; then
                  mv "$f.tmp" "$f"
                else
                  rm -f "$f.tmp"
                fi
              fi
            done
            
            # Fix permissions
            chmod 644 /output/* 2>/dev/null || true
            '
            
          echo "‚úÖ Docker conversion completed"
          
          # Fix ownership
          sudo chown -R $USER:$USER converted_rpy/ 2>/dev/null || true
          
          echo ""
          echo "=== Final Results ==="
          if [ "$(ls -A converted_rpy/ 2>/dev/null)" ]; then
            echo "‚úÖ Converted files:"
            ls -la converted_rpy/
            
            echo ""
            echo "Content summary:"
            for f in converted_rpy/*.rpy; do
              if [ -f "$f" ]; then
                size=$(stat -c%s "$f" 2>/dev/null || echo "0")
                lines=$(wc -l < "$f" 2>/dev/null || echo "0")
                echo "  $(basename "$f"): ${size} bytes, ${lines} lines"
                
                # Show actual content sample
                if [ "$size" -gt 50 ]; then
                  echo "    Content preview:"
                  head -3 "$f" 2>/dev/null | sed 's/^/      /' || echo "      Cannot read"
                fi
              fi
            done
          else
            echo "‚ùå No files were converted"
          fi
        else
          echo "‚ùå No .rpyc files found in to_rpy folder"
          echo "Please add .rpyc files to the to_rpy folder and run again"
        fi
        
    - name: Upload converted files
      uses: actions/upload-artifact@v4
      if: hashFiles('converted_rpy/*') != ''
      with:
        name: converted-rpy-files
        path: converted_rpy/
        
    - name: Commit converted files (optional)
      if: hashFiles('converted_rpy/*') != ''
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add converted_rpy/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "‚ú® Add converted .rpy files from .rpyc [automated]"
          git push && echo "‚úÖ Files committed successfully" || echo "‚ö†Ô∏è Push failed - check permissions"
        fi
      continue-on-error: true